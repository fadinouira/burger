{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Components/Burger/Ingredient/Ingredient.js","Components/Burger/Burger.js","Containers/BurgerList/BurgerList.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Ingredient","props","ingredient","type","className","Burger","add","ingredients","keys","map","key","_","i","Aux","connect","state","orders","order","token","auth","dispatch","getOrders","service","useEffect","list","b","console","log","name","street","zipCode","email","price"],"mappings":"mKAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,G,2BImC/EC,EAtCI,SAAAC,GACf,IAAIC,EAAa,KAEjB,OAAOD,EAAME,MACT,IAAM,eACFD,EAAa,qBAAKE,UAAU,gBAC5B,MACJ,IAAM,YACFF,EACA,sBAAKE,UAAU,WAAf,UACI,qBAAKA,UAAU,WACf,qBAAKA,UAAU,cAGnB,MACJ,IAAM,OACFF,EAAa,qBAAKE,UAAU,SAC5B,MACJ,IAAM,QACFF,EAAa,qBAAKE,UAAU,UAC5B,MACJ,IAAM,SACFF,EAAa,qBAAKE,UAAU,WAC5B,MACJ,IAAM,QACFF,EAAa,qBAAKE,UAAU,UAC5B,MACJ,QACIF,EAAa,KAGrB,OAAOA,G,MCHIG,IA1BA,SAACJ,GACZ,IAAIK,EAAM,GAEVA,EAAM,8BAEN,IAAMC,EAAcX,OAAOY,KAAKP,EAAMM,aAAaE,KAAI,SAAAC,GACnD,OAAO,EAAIpB,MAAMW,EAAMM,YAAYG,KAAOD,KAAI,SAACE,EAAEC,GAE7C,OADAN,EAAM,GACC,cAAC,EAAD,CAA0BH,KAAMO,GAAfA,EAAME,SAKtC,OACI,cAACC,EAAA,EAAD,UACI,sBAAKT,UAAU,SAAf,UACI,cAAC,EAAD,CAAYD,KAAK,cAChBI,EACAD,EACD,cAAC,EAAD,CAAYH,KAAK,wB,4HCoClBW,uBAbO,SAACC,GACnB,MAAO,CACHC,OAASD,EAAME,MAAMD,OACrBE,MAAQH,EAAMI,KAAKD,UAIA,SAACE,GACxB,MAAO,CACHC,UAAY,SAACH,GAAD,OAAUE,EAASE,IAAoBJ,QAI5CJ,EAnDI,SAACb,GAChBsB,qBACI,WACOtB,EAAMiB,OACTjB,EAAMoB,UAAUpB,EAAMiB,SAE1B,CAACjB,EAAMiB,QAEX,IAAIM,EAAO,cAAC,IAAD,IAEX,GAAGvB,EAAMe,OAAQ,CACb,IAAIJ,EAAI,EACRY,EAAOvB,EAAMe,OAAOP,KAAI,SAACgB,GACrBb,GAAM,EACN,IAAMK,EAAK,eAAOQ,EAAER,OAEpB,OADAS,QAAQC,IAAIF,GAER,sBAAKrB,UAAU,OAAf,UACI,8BAAMa,EAAMW,OACZ,gCAAMX,EAAMY,OAAZ,KAAsBZ,EAAMa,WAC5B,0CAAab,EAAMc,SACnB,uBACA,cAAC,IAAD,CAAQxB,YAAakB,EAAElB,cACvB,qBAAKH,UAAU,QAAf,sBACA,gCAAMqB,EAAEO,MAAR,WAPuBpB,MAcvC,OACI,8BACKY","file":"static/js/4.b1f2f02d.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import './Ingredient.css' ;\nimport PropTypes from 'prop-types' ;\nconst Ingredient = props => {\n    let ingredient = null ;\n\n    switch(props.type) {\n        case ('bread-bottom') :\n            ingredient = <div className=\"BreadBottom\" ></div> ;\n            break ;\n        case (\"bread-top\") :\n            ingredient = (\n            <div className=\"BreadTop\" >\n                <div className=\"Seeds1\"></div>\n                <div className=\"Seeds2\"></div>\n            </div> \n            );\n            break ;\n        case ('meat') :\n            ingredient = <div className='Meat' ></div> ;\n            break ;\n        case ('salad') :\n            ingredient = <div className='Salad' ></div> ;\n            break ;\n        case ('cheese') :\n            ingredient = <div className='Cheese' ></div> ;\n            break ;\n        case ('bacon') :\n            ingredient = <div className='Bacon' ></div> ;\n            break ;\n        default :\n            ingredient = null ;\n    }\n\n    return ingredient ;\n}\n\nIngredient.propTypes = {\n    type : PropTypes.string.isRequired\n}\n\nexport default Ingredient ;","import Aux from \"../../hoc/Aux\";\nimport Ingredient from \"./Ingredient/Ingredient\";\nimport './Burger.css';\n\nconst Burger = (props) => {\n    let add = \"\" ;\n\n    add = \"Please add your ingredients\" ;\n\n    const ingredients = Object.keys(props.ingredients).map(key => {\n        return [...Array(props.ingredients[key])].map((_,i) => {\n            add = \"\" ;\n            return <Ingredient key={key + i} type={key}/>\n        })\n    });\n\n\n    return (\n        <Aux >\n            <div className=\"burger\">\n                <Ingredient type=\"bread-top\"/>\n                {ingredients}\n                {add}\n                <Ingredient type='bread-bottom'/>\n            </div>\n        </Aux>\n    );\n\n}\n\nexport default Burger ;","import { useEffect} from \"react\";\nimport Burger from \"../../Components/Burger/Burger\";\nimport \"./BurgerList.css\";\nimport * as service from '../../store/actions';\nimport {connect} from 'react-redux';\nimport Spinner from \"../../Components/UI/Spinner/Spinner\";\n\n\nconst BurgerList = (props)=> {\n    useEffect(\n        ()=> {\n            if(props.token)\n            props.getOrders(props.token);\n        },\n        [props.token]\n    );\n    let list = <Spinner />;\n\n    if(props.orders) {\n        let i = 0 ;\n        list = props.orders.map((b)=> {\n            i = i+1 ;\n            const order = {...b.order}\n            console.log(b);\n            return (\n                <div className=\"Card\" key={i}>\n                    <div>{order.name}</div>\n                    <div>{order.street}, {order.zipCode}</div>\n                    <div>email: {order.email}</div>\n                    <br />\n                    <Burger ingredients={b.ingredients} />\n                    <div className=\"Price\">Price DT</div>\n                    <div>{b.price} DT</div>\n                </div>\n                \n            )\n        });\n    }\n\n    return ( \n        <div>\n            {list}\n        </div>\n    );\n}\n\nconst getPropsState = (state) => {\n    return {\n        orders : state.order.orders,\n        token : state.auth.token\n    }\n}\n\nconst dispatchPropsState = (dispatch) => {\n    return {\n        getOrders : (token)=> dispatch(service.onGetOrders(token))\n    }\n}\n\nexport default connect(getPropsState,dispatchPropsState) (BurgerList) ;"],"sourceRoot":""}